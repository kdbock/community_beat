// lib/services/data_seeder.dart

import 'package:flutter/foundation.dart';

import '../models/event.dart';
import '../models/business.dart';
import '../models/post.dart';
import 'data_service.dart';

/// Service to seed the database with sample data for testing and development
class DataSeeder {
  static final DataSeeder _instance = DataSeeder._internal();
  factory DataSeeder() => _instance;
  DataSeeder._internal();

  final DataService _dataService = DataService();

  /// Seed all sample data
  Future<void> seedAllData() async {
    try {
      debugPrint('üå± Starting data seeding...');
      
      await Future.wait([
        seedPosts(),
        seedBusinesses(),
        seedEvents(),
        seedServiceRequests(),
        seedEmergencyAlerts(),
      ]);
      
      debugPrint('‚úÖ Data seeding completed successfully!');
    } catch (e) {
      debugPrint('‚ùå Error seeding data: $e');
      rethrow;
    }
  }

  /// Seed sample posts
  Future<void> seedPosts() async {
    debugPrint('üìù Seeding posts...');
    
    final samplePosts = [
      Post(
        id: '', // Will be generated by Firestore
        title: 'iPhone 13 Pro for Sale',
        description: 'Excellent condition iPhone 13 Pro, 256GB, Space Gray. Includes original box and charger. No scratches or damage.',
        type: PostType.buySell,
        category: 'Electronics',
        authorName: 'Sarah Johnson',
        authorContact: 'sarah.j@email.com',
        createdAt: DateTime.now().subtract(const Duration(hours: 2)),
        price: 750.0,
        location: 'Downtown Area',
        tags: ['iPhone', 'Apple', 'smartphone', 'electronics'],
      ),
      Post(
        id: '',
        title: 'Lost Golden Retriever - Max',
        description: 'Lost my golden retriever Max near Central Park. He\'s very friendly and responds to his name. Please contact if found!',
        type: PostType.lostFound,
        category: 'Pets',
        authorName: 'Mike Chen',
        authorContact: '(555) 123-4567',
        createdAt: DateTime.now().subtract(const Duration(hours: 6)),
        location: 'Central Park Area',
        tags: ['lost pet', 'golden retriever', 'dog'],
      ),
      Post(
        id: '',
        title: 'Part-time Barista Wanted',
        description: 'Local coffee shop seeking friendly part-time barista. Experience preferred but will train the right person. Flexible hours.',
        type: PostType.job,
        category: 'Jobs',
        authorName: 'Coffee Corner',
        authorContact: 'hiring@coffeecorner.com',
        createdAt: DateTime.now().subtract(const Duration(hours: 12)),
        location: 'Main Street',
        tags: ['job', 'barista', 'part-time', 'coffee'],
      ),
      Post(
        id: '',
        title: 'Apartment for Rent - 2BR/1BA',
        description: 'Beautiful 2-bedroom apartment available for rent. Recently renovated, close to public transport. Pet-friendly.',
        type: PostType.housing,
        category: 'Housing',
        authorName: 'Property Manager',
        authorContact: 'rentals@propertyco.com',
        createdAt: DateTime.now().subtract(const Duration(days: 1)),
        price: 1200.0,
        location: 'Riverside District',
        tags: ['apartment', 'rent', '2-bedroom', 'pet-friendly'],
      ),
      Post(
        id: '',
        title: 'Volunteer Needed for Community Garden',
        description: 'Help us maintain our community garden! Looking for volunteers to help with planting, weeding, and general maintenance.',
        type: PostType.volunteer,
        category: 'Community',
        authorName: 'Green Thumb Society',
        authorContact: 'volunteers@greenthumb.org',
        createdAt: DateTime.now().subtract(const Duration(days: 2)),
        location: 'Community Garden',
        tags: ['volunteer', 'gardening', 'community', 'environment'],
      ),
    ];

    for (final post in samplePosts) {
      await _dataService.createPost(post);
    }
    
    debugPrint('‚úÖ Posts seeded successfully');
  }

  /// Seed sample businesses
  Future<void> seedBusinesses() async {
    debugPrint('üè¢ Seeding businesses...');
    
    final sampleBusinesses = [
      Business(
        id: '',
        name: 'Joe\'s Pizza Palace',
        description: 'Authentic New York style pizza made with fresh ingredients. Family owned and operated since 1985.',
        category: 'Restaurant',
        address: '123 Main Street, Downtown',
        phone: '(555) 123-PIZZA',
        email: 'info@joespizza.com',
        website: 'www.joespizza.com',
        hours: {
          'Monday': '11:00 AM - 10:00 PM',
          'Tuesday': '11:00 AM - 10:00 PM',
          'Wednesday': '11:00 AM - 10:00 PM',
          'Thursday': '11:00 AM - 10:00 PM',
          'Friday': '11:00 AM - 11:00 PM',
          'Saturday': '11:00 AM - 11:00 PM',
          'Sunday': '12:00 PM - 9:00 PM',
        },
        rating: 4.5,
        reviewCount: 127,
        services: ['Dine-in', 'Takeout', 'Delivery'],
        isVerified: true,
        latitude: 40.7128,
        longitude: -74.0060,
        deals: [
          Deal(
            id: 'deal1',
            title: 'Large Pizza Special',
            description: 'Buy any large pizza, get a second one 50% off',
            discountPercentage: '50%',
            expiryDate: DateTime.now().add(const Duration(days: 30)),
          ),
        ],
      ),
      Business(
        id: '',
        name: 'Smith Auto Repair',
        description: 'Professional automotive repair services. ASE certified technicians with over 20 years of experience.',
        category: 'Automotive',
        address: '456 Oak Avenue, Industrial District',
        phone: '(555) 987-6543',
        email: 'service@smithauto.com',
        website: 'www.smithautorepair.com',
        hours: {
          'Monday': '8:00 AM - 6:00 PM',
          'Tuesday': '8:00 AM - 6:00 PM',
          'Wednesday': '8:00 AM - 6:00 PM',
          'Thursday': '8:00 AM - 6:00 PM',
          'Friday': '8:00 AM - 6:00 PM',
          'Saturday': '8:00 AM - 4:00 PM',
          'Sunday': 'Closed',
        },
        rating: 4.8,
        reviewCount: 89,
        services: ['Oil Change', 'Brake Repair', 'Engine Diagnostics', 'Tire Service'],
        isVerified: true,
        latitude: 40.7589,
        longitude: -73.9851,
      ),
      Business(
        id: '',
        name: 'Bella\'s Beauty Salon',
        description: 'Full-service beauty salon offering hair, nails, and skincare services. Walk-ins welcome!',
        category: 'Beauty & Wellness',
        address: '789 Elm Street, Shopping District',
        phone: '(555) 456-7890',
        email: 'appointments@bellasbeauty.com',
        hours: {
          'Monday': 'Closed',
          'Tuesday': '9:00 AM - 7:00 PM',
          'Wednesday': '9:00 AM - 7:00 PM',
          'Thursday': '9:00 AM - 8:00 PM',
          'Friday': '9:00 AM - 8:00 PM',
          'Saturday': '8:00 AM - 6:00 PM',
          'Sunday': '10:00 AM - 5:00 PM',
        },
        rating: 4.3,
        reviewCount: 156,
        services: ['Haircuts', 'Hair Coloring', 'Manicures', 'Pedicures', 'Facials'],
        isVerified: true,
        isNew: true,
        latitude: 40.7505,
        longitude: -73.9934,
      ),
      Business(
        id: '',
        name: 'TechFix Computer Repair',
        description: 'Computer and smartphone repair specialists. Fast, reliable service with warranty on all repairs.',
        category: 'Professional Services',
        address: '321 Tech Boulevard, Business District',
        phone: '(555) TECH-FIX',
        email: 'support@techfixrepair.com',
        website: 'www.techfixrepair.com',
        hours: {
          'Monday': '9:00 AM - 6:00 PM',
          'Tuesday': '9:00 AM - 6:00 PM',
          'Wednesday': '9:00 AM - 6:00 PM',
          'Thursday': '9:00 AM - 6:00 PM',
          'Friday': '9:00 AM - 6:00 PM',
          'Saturday': '10:00 AM - 4:00 PM',
          'Sunday': 'Closed',
        },
        rating: 4.6,
        reviewCount: 73,
        services: ['Computer Repair', 'Phone Repair', 'Data Recovery', 'Virus Removal'],
        isVerified: true,
        latitude: 40.7614,
        longitude: -73.9776,
      ),
    ];

    for (final business in sampleBusinesses) {
      await _dataService.createBusiness(business);
    }
    
    debugPrint('‚úÖ Businesses seeded successfully');
  }

  /// Seed sample events
  Future<void> seedEvents() async {
    debugPrint('üìÖ Seeding events...');
    
    final sampleEvents = [
      Event(
        id: '',
        title: 'Monthly Town Hall Meeting',
        description: 'Join us for our monthly town hall meeting to discuss community issues, upcoming projects, and answer your questions.',
        startDate: DateTime.now().add(const Duration(days: 7)),
        endDate: DateTime.now().add(const Duration(days: 7, hours: 2)),
        location: 'City Hall - Main Conference Room',
        category: 'Government',
        organizer: 'City Council',
        contactInfo: 'townhall@citycouncil.gov',
        tags: ['government', 'community', 'meeting'],
      ),
      Event(
        id: '',
        title: 'Summer Music Festival',
        description: 'Annual summer music festival featuring local bands and food vendors. Free admission for all ages!',
        startDate: DateTime.now().add(const Duration(days: 21)),
        endDate: DateTime.now().add(const Duration(days: 23)),
        location: 'Central Park Amphitheater',
        category: 'Entertainment',
        organizer: 'Parks & Recreation Department',
        contactInfo: 'events@parksrec.gov',
        tags: ['music', 'festival', 'family-friendly', 'free'],
      ),
      Event(
        id: '',
        title: 'Community Cleanup Day',
        description: 'Help keep our community beautiful! Join us for a neighborhood cleanup. Supplies provided.',
        startDate: DateTime.now().add(const Duration(days: 14)),
        endDate: DateTime.now().add(const Duration(days: 14, hours: 4)),
        location: 'Meet at Community Center',
        category: 'Community',
        organizer: 'Green Initiative Group',
        contactInfo: 'cleanup@greeninitiative.org',
        tags: ['volunteer', 'environment', 'cleanup', 'community'],
      ),
      Event(
        id: '',
        title: 'Small Business Workshop',
        description: 'Learn about starting and growing your small business. Topics include marketing, financing, and legal considerations.',
        startDate: DateTime.now().add(const Duration(days: 10)),
        endDate: DateTime.now().add(const Duration(days: 10, hours: 3)),
        location: 'Business Development Center',
        category: 'Business',
        organizer: 'Chamber of Commerce',
        contactInfo: 'workshops@chamber.org',
        tags: ['business', 'workshop', 'entrepreneurship', 'education'],
      ),
      Event(
        id: '',
        title: 'Youth Soccer Registration',
        description: 'Registration open for youth soccer league. Ages 6-16. Season starts in September.',
        startDate: DateTime.now().add(const Duration(days: 3)),
        endDate: DateTime.now().add(const Duration(days: 3, hours: 6)),
        location: 'Recreation Center',
        category: 'Sports',
        organizer: 'Youth Sports League',
        contactInfo: 'registration@youthsports.org',
        tags: ['sports', 'youth', 'soccer', 'registration'],
      ),
    ];

    for (final event in sampleEvents) {
      await _dataService.createEvent(event);
    }
    
    debugPrint('‚úÖ Events seeded successfully');
  }

  /// Seed sample service requests
  Future<void> seedServiceRequests() async {
    debugPrint('üõ†Ô∏è Seeding service requests...');
    
    final sampleRequests = [
      {
        'title': 'Pothole on Main Street',
        'description': 'Large pothole near the intersection of Main St and 1st Ave causing traffic issues.',
        'category': 'Road Maintenance',
        'location': 'Main Street & 1st Avenue',
        'contactInfo': 'resident@email.com',
      },
      {
        'title': 'Broken Streetlight',
        'description': 'Streetlight has been out for over a week on Oak Avenue near the school.',
        'category': 'Public Safety',
        'location': 'Oak Avenue (near Elementary School)',
        'contactInfo': '(555) 123-4567',
      },
      {
        'title': 'Graffiti Removal Request',
        'description': 'Graffiti on the side of the community center building needs to be cleaned.',
        'category': 'Property Maintenance',
        'location': 'Community Center - East Wall',
        'contactInfo': 'concerned.citizen@email.com',
      },
    ];

    for (final request in sampleRequests) {
      await _dataService.submitServiceRequest(
        title: request['title']!,
        description: request['description']!,
        category: request['category']!,
        location: request['location'],
        contactInfo: request['contactInfo'],
      );
    }
    
    debugPrint('‚úÖ Service requests seeded successfully');
  }

  /// Seed sample emergency alerts
  Future<void> seedEmergencyAlerts() async {
    debugPrint('üö® Seeding emergency alerts...');
    
    final sampleAlerts = [
      {
        'title': 'Water Main Break - Service Interruption',
        'message': 'Water service will be interrupted on Elm Street between 2-6 PM today for emergency repairs.',
        'severity': 'medium',
        'category': 'Utilities',
        'expiresAt': DateTime.now().add(const Duration(hours: 8)),
      },
      {
        'title': 'Community Event - Road Closure',
        'message': 'Main Street will be closed to traffic this Saturday 9 AM - 4 PM for the Farmers Market.',
        'severity': 'low',
        'category': 'Traffic',
        'expiresAt': DateTime.now().add(const Duration(days: 5)),
      },
    ];

    for (final alert in sampleAlerts) {
      await _dataService.createEmergencyAlert(
        title: alert['title']! as String,
        message: alert['message']! as String,
        severity: alert['severity']! as String,
        category: alert['category'] as String?,
        expiresAt: alert['expiresAt'] as DateTime?,
      );
    }
    
    debugPrint('‚úÖ Emergency alerts seeded successfully');
  }

  /// Check if database already has data
  Future<bool> hasExistingData() async {
    try {
      final stats = await _dataService.getDashboardStats();
      return stats['total_posts']! > 0 || 
             stats['total_businesses']! > 0 || 
             stats['upcoming_events']! > 0;
    } catch (e) {
      return false;
    }
  }

  /// Seed data only if database is empty
  Future<void> seedIfEmpty() async {
    final hasData = await hasExistingData();
    if (!hasData) {
      debugPrint('üìä Database appears to be empty, seeding with sample data...');
      await seedAllData();
    } else {
      debugPrint('üìä Database already contains data, skipping seeding.');
    }
  }
}